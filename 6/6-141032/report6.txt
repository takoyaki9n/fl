関数・論理型プログラミング演習第6回レポート
氏名:八尋渉
学籍番号:05-141032

syntax.ml、w5.ml、w5lexer.mll、w5parser.mlyを流用した。
ソースコード（全問共通): syntax.ml  w5.ml w5printer.ml w5interpreter.ml  w5lexer.mll  w5parser.mly

問1 tyの定義
実行例:
なし
考察:
以下のように型を表す型を定義した。
type ty = 
  | TInt
  | TBool
  | TFun of ty * ty
  | TList of ty
  | TTup of ty list
  | TVar of tvar

問2 ty_sbstの定義
実行例:
なし
考察:
ty_sbstで与えられた型をintかboolか型変数まで展開し、型変数ならty_sbst_oneで型代入を検索し、新しい型に変換する。

問3 ty_unifyの定義
実行例:
なし
考察:
型制約の依存関係が循環していないかを調べるappears
型制約に現れる型を置き換えるty_replace
型制約を解いて型代入を作るty_unify
を実装した。

問4 型推論付きインタープリタ
実行例:
examples以下の
examples/fun*.ml				
examples/rec_fun*.ml
examples/mut_rec_fun*.ml 
examples/list_tup*.ml (1-3,5のみ)
※examples/mut_rec_fun2.mlは不動点コンビネータを含むため失敗する。
考察:
gather_constraintsで式の構造から型制約を作り、
infer_exprでは式を受け取って、gather_constraintsで作った型制約をty_unifyに渡し、最終的にty_sbstで式の型を取り出す。
infer_cmdは実装せず、メインループに含めた。
リストとタプルも実装した。

問5 パターンマッチの型推論
実行例:
examples以下のすべて
考察:
パターンから型と型制約と型環境の組みを返すgather_constraints_patternを実装した。

